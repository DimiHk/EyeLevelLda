<div class="language-picker__container" id="language-picker">
  <button type="button" class="language-picker__button" id="toggle-language-dropdown">
    {{ 'icon-world.svg' | inline_asset_content }}
    <span class="language-picker__label">{{ localization.language.endonym_name | capitalize }}</span>
    <span class="language-picker__arrow">
      {{ 'icon-arrow-down.svg' | inline_asset_content }}
    </span>
  </button>

  <ul class="language-picker__dropdown" id="language-dropdown">
    {% for language in localization.available_languages %}
      {% assign short_code = language.iso_code | split: '-' | first %}
      <li class="language-picker__dropdown-item" data-lang-code="{{ short_code }}">
        {{ language.endonym_name | capitalize }}
      </li>
    {% endfor %}
  </ul>
</div>

{% javascript %}
  document.addEventListener('DOMContentLoaded', () => {
    const button = document.getElementById('toggle-language-dropdown');
    const dropdown = document.getElementById('language-dropdown');

    function toggleLanguageDropdown() {
      const isOpen = dropdown.classList.contains('open');
      dropdown.classList.toggle('open', !isOpen);
      button.classList.toggle('active', !isOpen);
    }

    if (button) {
      button.addEventListener('click', (e) => {
        e.stopPropagation();
        toggleLanguageDropdown();
      });
    }

    document.querySelectorAll('#language-dropdown .language-picker__dropdown-item').forEach((item) => {
      item.addEventListener('click', () => {
        const langCode = item.getAttribute('data-lang-code');
        const url = langCode === 'en' ? '/' : '/' + langCode;
        window.location.href = url;
      });
    });

    document.addEventListener('click', (e) => {
      if (!button.contains(e.target)) {
        dropdown.classList.remove('open');
        button.classList.remove('active');
      }
    });
  });
{% endjavascript %}

{% stylesheet %}
  .language-picker__container {
    position: relative;
  }

  .language-picker__button {
    display: flex;
    align-items: center;
    gap: 6px;
    background: transparent;
    border: none;
    cursor: pointer;
    font-weight: var(--font-light);
    transition: border-color 0.3s ease;
  }

  .language-picker__button:hover {
    border-color: #888;
  }

  .language-picker__arrow {
    display: inline-block;
    transition: transform 0.3s ease;
  }

  .language-picker__button.active .language-picker__arrow {
    transform: rotate(180deg);
  }

  .language-picker__dropdown {
    position: absolute;
    top: 28px;
    left: 0px;
    right: 0;
    display: flex;
    flex-direction: column;
    background: white;
    border-radius: 6px;
    list-style: none;
    padding: 0;
    opacity: 0;
    transform: translateY(-10px);
    pointer-events: none;
    transition: opacity 0.3s ease, transform 0.3s ease;
    z-index: 1000;
    max-width: 100%;
  }

  .language-picker__dropdown.open {
    opacity: 1;
    transform: translateY(0);
    pointer-events: auto;
  }

  .language-picker__label {
    font-size: 0.785rem;
  }

  .language-picker__dropdown-item {
    padding: 10px;
    cursor: pointer;
    font-weight: var(--font-light);
    font-size: 0.785rem;
  }

  .language-picker__dropdown-item:hover {
    background-color: #f0f0f0;
  }

  @media screen and (min-width: 768px) {
    .language-picker__button {
      padding: 6px 10px;
    }

    .language-picker__label {
      font-size: 0.875rem;
    }

    .language-picker__dropdown-item {
      font-size: 0.875rem;
    }
  }
{% endstylesheet %}

{% schema %}
{
  "name": "Language Picker",
  "presets": [
    {
      "name": "Language Picker"
    }
  ]
}
{% endschema %}
